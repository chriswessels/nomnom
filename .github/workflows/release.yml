name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: nomnom-linux-x86_64.tar.gz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: nomnom-linux-aarch64.tar.gz
          
          # macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            name: nomnom-macos-x86_64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: nomnom-macos-aarch64.tar.gz
          
          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: nomnom-windows-x86_64.zip

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-musl'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Install musl-tools
      if: contains(matrix.target, 'musl')
      run: sudo apt-get install -y musl-tools

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (unix)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/nomnom

    - name: Create archive (unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.name }} nomnom
        cd -

    - name: Create archive (windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../${{ matrix.name }} nomnom.exe
        cd -

    - name: Generate SHA256 checksum
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          certutil -hashfile ${{ matrix.name }} SHA256 > ${{ matrix.name }}.sha256
        else
          shasum -a 256 ${{ matrix.name }} > ${{ matrix.name }}.sha256
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: |
          ${{ matrix.name }}
          ${{ matrix.name }}.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Nomnom v${{ steps.version.outputs.VERSION }}
        body: |
          # Nomnom v${{ steps.version.outputs.VERSION }}
          
          A blazingly fast, cross-platform CLI tool for code repository analysis and intelligent output generation.
          
          ## ðŸš€ Quick Install
          
          ### Linux (x86_64)
          ```bash
          curl -L https://github.com/chriswessels/nomnom/releases/download/${{ github.ref_name }}/nomnom-linux-x86_64.tar.gz | tar xz
          sudo mv nomnom /usr/local/bin/
          ```
          
          ### macOS (Intel)
          ```bash
          curl -L https://github.com/chriswessels/nomnom/releases/download/${{ github.ref_name }}/nomnom-macos-x86_64.tar.gz | tar xz
          sudo mv nomnom /usr/local/bin/
          ```
          
          ### macOS (Apple Silicon)
          ```bash
          curl -L https://github.com/chriswessels/nomnom/releases/download/${{ github.ref_name }}/nomnom-macos-aarch64.tar.gz | tar xz
          sudo mv nomnom /usr/local/bin/
          ```
          
          ### Windows
          Download `nomnom-windows-x86_64.zip`, extract, and add to your PATH.
          
          ## ðŸ“‹ Assets
          
          All binaries are statically linked and ready to run. SHA256 checksums are provided for verification.
          
          ## ðŸ”„ Changes
          
          See the [commit history](https://github.com/chriswessels/nomnom/commits/${{ github.ref_name }}) for detailed changes in this release.
        files: |
          nomnom-*.tar.gz
          nomnom-*.zip
          *.sha256
        draft: false
        prerelease: false